-- op antilock from discord.gg/streamable

do return(function(dJ,cJ,zJ,IJ,FJ,PJ,CJ,yJ,bJ,VJ,fJ,UJ,lJ,oJ,rJ,OJ,sJ,hJ,wJ,KJ,XJ,AJ,nJ,YJ,qJ,pJ,kJ,RJ,ZJ,vJ,MJ,JJ,gJ,QJ,aJ,...)local W,G=assert,(tonumber);local m=(aJ);local DJ=(2);local B=(error);local T,a,H,g=nil,nil,nil,(nil);repeat do if not(DJ<=0X1)then if DJ==0x02 then T=nJ;DJ=0x003;else a=kJ;DJ=1;end;elseif DJ==0 then g=pJ;break;else H=gJ;DJ=0;end;end;until(false);local f=0X100000000;local X=(setmetatable);do DJ=1;end;local u,e,S=nil,nil,nil;do while DJ~=3 do if not(DJ<=0x0)then if DJ==0X01 then u=XJ.sub;DJ=0X0;else S={3,0x2,1};DJ=0X03;end;else do e=XJ.char;end;DJ=0X00002;end;end;end;local o=(rawset);local d,Y=(JJ or bit32),2^52;local r=(next);local E=(pcall);DJ=0X2;local k,V=nil,nil;do while DJ~=3 do if DJ<=0 then do V=1;end;DJ=1;elseif DJ~=1 then k=oJ;DJ=0x0;else do DJ=0x00003;end;end;end;end;local O=getfenv;DJ=0;local U,HJ,R=nil,nil,(nil);while DJ<=0X3 do do if not(DJ<=1)then if DJ~=0X00002 then HJ=1;DJ=1;else DJ=0X3;end;elseif DJ~=0 thendo DJ=0x4;end;else do U=(O and O()or _ENV);end;do DJ=2;end;end;end;end;local l=nil;R=k(u(R,rJ),"..",function(Dp)if T(Dp,2)~=72 then local Bx,dx=0X1,nil;do repeat if Bx~=0X0 then dx=e(G(Dp,16));Bx=0X00;else do if l then local Zg=nil;do for Mn=0,2 do if not(Mn<=0x00000)then if Mn==1 then l=nil;else return Zg;end;else do Zg=a(dx,l);end;end;end;end;else do return dx;end;end;end;Bx=0X002;end;until Bx==0X0002;end;else for yg=0X0,1 do if yg==0 then l=G(u(Dp,0X001,hJ));else return"";end;end;end;end);local w=(function()local kA=nil;for UQ=0,0X0002 do if not(UQ<=0)then if UQ~=1 then return kA;else V=V+1;end;else kA=T(R,V,V);end;end;end);local s=0X80000000;DJ=0X02;local N,c,q,F,y=nil,nil,nil,nil,(nil);while DJ~=0x5 do do if not(DJ<=1)then if not(DJ<=2)then if DJ==0X3 then do q=function()local mC=1;local HC,VC,QC,UC=nil,nil,nil,nil;while true do if not(mC<=0X0)then if mC~=1 then V=V+4;mC=0;else do HC,VC,QC,UC=T(R,V,V+0X003);end;mC=0X2;end;else return UC*0X1000000+QC*65536+VC*0X100+HC;end;end;end;end;DJ=0X1;else y={[cJ]=1};DJ=0X5;end;else N=IJ;DJ=0X0;end;else do if DJ==0 then do c=ZJ;end;DJ=0X0003;else F=f-1;DJ=4;end;end;end;end;end;DJ=0;local M,mJ,P=nil,nil,(nil);repeat if DJ<=1 then do if DJ~=0 then do M=function(Jq,bq,Sq)local Cq=0X00;local nq=nil;while(true)do do if not(Cq<=0)then if Cq~=1 then nq=nq-nq%0X1;do Cq=0X1;end;else return nq;end;else nq=(Jq/y[bq])%y[Sq];Cq=2;end;end;end;end;end;DJ=0X2;else do local Mw=2;for dy=0X00001,31 do local Dy=1;repeat do if Dy~=0X0000 then y[dy]=Mw;Dy=0;else do Mw=Mw*2;end;Dy=2;end;end;until Dy>1;end;end;DJ=1;end;end;elseif DJ~=0x02 then do P=s-1;end;do DJ=4;end;else mJ={};DJ=0X3;end;until DJ>=4;DJ=0;local A,C,v=nil,nil,nil;while DJ<0X03 do if not(DJ<=0x00000)then if DJ~=1 then v=function()local k_=0X000;local c_,r_=nil,(nil);repeat do if k_<=0X0 then c_=q();k_=1;else do if k_~=1 then if not(c_==0 and r_==0x0)then else return 0X00000;end;k_=3;else r_=q();k_=0X02;end;end;end;end;until k_==3;local i_=((-0X00001)^M(r_,0X01f,0X1));local o_=M(r_,0X14,11);local h_=0x01;local Y_=M(r_,0,20)*f+c_;if o_==0x0 then if Y_==0x00000 then return i_*0x0;else local dt=0;do repeat if dt==0 then do o_=1;end;dt=1;else h_=0X00;do dt=0X002;end;end;until dt>1;end;end;elseif o_~=0X0007FF then else if Y_==0 then do return i_*(0X000/0X0);end;else return i_*(1/0x0);end;end;do return i_*(0X2^(o_-0X03fF))*(Y_/Y+h_);end;end;DJ=3;else do C={[0]={[0x0000]=0X00,1,0X00002,3,4,5,6,7,8,0X9,10,11,12,0Xd,0X0E,0Xf},{[0]=0X00001,0x0,3,0X002,0x00005,4,0X7,6,0x00009,8,11,0X00a,0XD,12,OJ,0XE},{[0X000]=0x02,0X003,0,1,UJ,0X00007,4,5,VJ,11,0X8,0X0009,RJ,0XF,0X000C,0X0D},{[0X0]=3,lJ,1,0X0,0X007,0X6,5,4,0x000B,0X0000A,9,8,OJ,0xe,13,0X0c},{[0X0]=0X04,rJ,0X00006,wJ,cJ,1,2,0X3,12,13,0xe,15,8,0X009,0X0000A,11},{[cJ]=5,4,7,6,1,cJ,3,0X02,0Xd,qJ,0X00F,14,9,0x8,0XB,0Xa},{[0]=6,7,4,5,2,3,0X0000,1,0X000E,0XF,12,13,10,0x0000B,8,0X9},{[cJ]=7,0X6,0X005,sJ,0x0003,0X2,0X1,0,15,0x0E,13,12,0xb,0Xa,0X9,8},{[0X0]=8,0X009,10,11,12,13,14,15,0,1,2,0X3,4,rJ,0X6,0X7},{[0X00]=fJ,YJ,0XB,VJ,0x0D,12,0X000f,14,0X0001,0,FJ,2,0X005,0X4,0X7,UJ},{[0X0]=0XA,0X00b,8,0X009,0X000e,0Xf,0Xc,13,2,3,0,1,6,0x7,0x4,5},{[cJ]=11,10,0X9,8,0X00f,RJ,0Xd,12,3,0x002,1,0,0X7,0X6,5,0X04},{[0X0000]=12,13,14,15,0X8,0X09,0Xa,0Xb,0X04,5,0X00006,wJ,0X00,1,0X00002,3},{[0X000]=0Xd,12,0xF,0XE,9,8,11,0XA,rJ,4,0X0007,0X0006,0X1,0x00000,0x3,2},{[0]=14,15,0X0c,13,VJ,0X000b,YJ,9,0X6,0x00007,0X4,5,lJ,3,0X00,hJ},{[0X0]=15,14,13,0XC,11,10,0X9,0x8,7,0X06,5,4,3,2,0X1,0X00}};end;DJ=2;end;else do A=function()local rv=0x1;local uv,Iv=nil,(nil);do while true do if not(rv<=0x0)then if rv~=1 then return Iv*f+uv;else do uv,Iv=q(),q();end;rv=0x000;end;else if Iv>=s then do Iv=Iv-f;end;end;rv=0X00002;end;end;end;end;end;DJ=1;end;end;local Q=(d and d.bxor or function(Sp,jp)Sp=Sp%f;local Yp=(0X00002);local rp=1;local Zp=nil;while'\108G\052`G\126\093\072'do if not(Yp<=1)then do if Yp==0X2 then jp=jp%f;do Yp=0;end;else return Zp+Sp*rp+jp*rp;end;end;else if Yp==0X00000 then Zp=0;do Yp=0X1;end;else do while Sp>0 and jp>cJ do local L9,b9,j9=0x0,nil,nil;while L9<0X02 do if L9~=0X00000 then do j9=jp%0X10;end;L9=2;else b9=Sp%16;L9=0X1;end;end;L9=0;while L9~=2 do if L9==0 then Zp=Zp+C[b9][j9]*rp;do L9=1;end;else Sp=(Sp-b9)/16;L9=2;end;end;do L9=0x0001;end;while true do if L9==0X0 then rp=rp*PJ;break;else do jp=(jp-j9)/PJ;end;L9=0x0;end;end;end;end;Yp=3;end;end;end;end);local K=d and d[yJ]or function(Xi,hi)Xi=Xi%f;hi=hi%f;return((Xi+hi)-Q(Xi,hi))/0X00002;end;local z=(d and d[MJ]or function(e0,f0)local D0=(0);do while"1%\040\123(qDc"do do if D0==0 then e0=e0%f;D0=0X1;else f0=f0%f;break;end;end;end;end;return F-K(F-e0,F-f0);end);local b,D=d and d.bnot or function(oB)return F-(oB%f);end,d and d.lshift;DJ=0X1;local j=nil;while true do if DJ==0 then D=D or function(mf,df)if df>=32 then return 0X0;end;local kf=0;while 0.8935019090789208 do do if kf~=0 then return(mf*y[df])%f;else if df<0x0 then do return j(mf,-df);end;end;kf=1;end;end;end;end;break;else j=d and d.rshift;DJ=0;end;end;local Z,h=unpack or table.unpack,(AJ.wrap);DJ=2;local t,i,I=nil,nil,nil;repeat if DJ<=0X1 then if DJ~=0 then t=function()local Mo=(0X0);local Oo=(0X0000);do while true do local l6=T(R,V,V);do V=V+0X1;end;do Oo=z(Oo,D(K(l6,127),Mo));end;do if K(l6,128)~=0 then else return Oo;end;end;Mo=Mo+0x00007;end;end;end;DJ=3;else I=coroutine.yield;DJ=0X0004;end;else if DJ~=0x2 then i={[6]=0X003,[1]=5,[0X4]=8,[0X2]=7,[0x3]=4,[0X9]=0X006,[6]=0X6,[0X07]=sJ};DJ=0;else j=j or function(ag,ig)do if not(ig>=32)then else return cJ;end;end;if ig<cJ then return D(ag,-ig);end;local Bg=((ag%f/y[ig]));return Bg-Bg%1;end;DJ=1;end;end;until DJ>0X003;local x=(w());local WJ=w();DJ=0X0;local NJ,EJ,L,J=nil,nil,nil,(nil);while DJ<=0X0003 do if DJ<=1 then if DJ~=0 then J=vJ;do DJ=4;end;else NJ=function(Jl)local al=({T(R,V,V+3)});local il=(Q(al[0X1],WJ));local Kl=Q(al[0X2],WJ);local bl=0;local sl,ml=nil,(nil);repeat if bl~=0X000 then do ml=Q(al[4],WJ);end;bl=0x2;else sl=Q(al[3],WJ);bl=0X001;end;until bl==2;do WJ=(0X99*WJ+Jl)%256;end;V=V+4;return ml*16777216+sl*65536+Kl*256+il;end;DJ=3;end;else if DJ==0x02 then L=function()local dd=nil;local jd=(2);repeat if not(jd<=0X0)then if jd==1 then return dd;else dd=t();do jd=0;end;end;else if not(dd>P)then else return dd-f;end;jd=0X1;end;until false;end;DJ=0x1;else do EJ=function(...)return N("#",...),{...};end;end;do DJ=2;end;end;end;end;DJ=0x1;local p,GJ,BJ,uJ=nil,nil,nil,nil;do repeat do if DJ<=1 then do if DJ~=0 then p=CJ.insert;DJ=0;else GJ=function(n0)local j0=(q());local s0,B0="",(0X00000);while 0.837486878547128 do do if B0<=0 then for BW=hJ,j0,7997 do local xW=0X002;local mW,VW=nil,nil;repeat if not(xW<=1)then if xW<=0X2 then do mW=BW+7997-0X1;end;do xW=0x1;end;else do if xW==0x00003 then do VW={T(R,V+BW-1,V+mW-1)};end;do xW=0;end;else s0=s0..e(Z(VW));do xW=5;end;end;end;end;else do if xW~=0X0 then if mW>j0 then do mW=j0;end;end;xW=0X3;else do for Jr=1,#VW do do VW[Jr]=Q(VW[Jr],x);end;x=(n0*x+39)%256;end;end;xW=4;end;end;end;until xW==0X5;end;B0=1;elseif B0==1 then V=V+j0;do B0=0X2;end;else do return s0;end;end;end;end;end;DJ=2;end;end;else if not(DJ<=2)then do if DJ~=3 then function uJ(vI,fI,oI)local dI=(oI[3]);local pI,yI=oI[5],(oI[9]);local wI,zI,RI=oI[6],oI[0x4],oI[0X8];local CI=oI[2];local MI=(X({},{__mode="v"}));local XI=(oI[1]);local VI=(nil);VI=function(...)local Iu=(1);local Uu=((O and O()or _ENV));local gu,Gu={},(0x00000);local Ou,Qu=EJ(...);Ou=Ou-1;for n3=0,Ou do if not(yI>n3)then break;else(gu)[n3]=Qu[n3+0X1];end;end;(BJ)[0X4]=oI;local hu=(Uu==U and fI or Uu);(BJ)[0X1]=gu;if not RI then do Qu=nil;end;else if not(CI)then else gu[yI]={n=Ou>=yI and Ou-yI+0X1 or 0X0,Z(Qu,yI+1,Ou+0X1)};end;end;if hu~=Uu then if c then(c)(VI,hu);else _ENV=hu;end;end;local Vu,Du,Wu,Tu=E(function()while""do local Pv=dI[Iu];local Kv=(Pv[0X06]);do Iu=Iu+1;end;do if Kv>=44 then if not(Kv>=66)then if not(Kv>=0X00037)then if Kv>=0X031 then if not(Kv<0X34)then if not(Kv<53)then if Kv==0X36 then local uX=(vI[Pv[3]]);do(gu)[Pv[1]]=uX[1][uX[0x02]];end;else(gu)[Pv[1]]=b(gu[Pv[0x03]]);end;else do repeat local Pz,oz=MI,gu;if#Pz>0X0000 then local qI=({});for Bb,Fb in r,Pz do for Cr,rr in r,Fb do if rr[1]==oz and rr[2]>=0 then local W7=rr[2];if not qI[W7]then(qI)[W7]={oz[W7]};end;(rr)[0X1]=qI[W7];rr[2]=1;end;end;end;end;until true;end;do return true,Pv[1],1;end;end;else if not(Kv>=0x032)then repeat local Ec,Sc,ic=MI,gu,(Pv[1]);if#Ec>0 then local kD=({});for Mf,Lf in r,Ec do for T3,a3 in r,Lf do if not(a3[0X01]==Sc and a3[2]>=ic)then else local co=(a3[2]);if not kD[co]then(kD)[co]={Sc[co]};end;(a3)[0X1]=kD[co];(a3)[2]=0X00001;end;end;end;end;until true;else if Kv==51 then(gu)[Pv[1]]=true;else gu[Pv[0X1]]={Z({},1,Pv[3])};end;end;end;else do if not(Kv>=46)then if Kv~=45 then if not(gu[Pv[3]]<=gu[Pv[0X2]])then Iu=Pv[0x001];end;else gu[Pv[1]]=gu[Pv[3]]%gu[Pv[0X2]];end;else if not(Kv<0X2f)then do if Kv~=48 then local H9=Pv[0X1];do gu[H9]=gu[H9](Z(gu,H9+1,Gu));end;Gu=H9;else if Pv[2]==0xE3 then Iu=Iu-1;dI[Iu]={[1]=(Pv[1]-0x0000AA),[3]=(Pv[0x3]-170),[6]=0X0016};else repeat local Dh,yh=MI,gu;if not(#Dh>0x00000)then else local bR={};do for GE,FE in r,Dh do for gq,Cq in r,FE do if not(Cq[0X1]==yh and Cq[0X2]>=0X0)then else local b8=(Cq[2]);if not(not bR[b8])then else do bR[b8]={yh[b8]};end;end;(Cq)[0X1]=bR[b8];Cq[0X2]=1;end;end;end;end;end;until true;return;end;end;end;else local xm=Pv[0X1];gu[xm](Z(gu,xm+1,Gu));do Gu=xm-1;end;end;end;end;end;else if not(Kv<60)then if Kv<0X3F then if Kv>=0X3d then if Kv~=62 then(gu)[Pv[1]]=BJ[Pv[0X3]];else do if gu[Pv[0X3]]==Pv[7]then else Iu=Pv[0X1];end;end;end;else local Qv=Ou-yI;local Xv=Pv[1];if Qv<0x0 then Qv=-1;end;do for Kg=Xv,Xv+Qv do gu[Kg]=Qu[yI+(Kg-Xv)+1];end;end;Gu=Xv+Qv;end;else if Kv>=0x40 then if Kv==0X0041 then do gu[Pv[1]]=hu[Pv[4]];end;else do gu[Pv[1]]=false;end;end;else local tC=(Pv[1]);(gu[tC])(gu[tC+0X1],gu[tC+2]);do Gu=tC-1;end;end;end;else do if not(Kv>=57)then if Kv==56 then if Pv[0x002]==0x00074 then do Iu=Iu-0x1;end;do dI[Iu]={[3]=(Pv[3]-0X000Db),[0X01]=(Pv[0X1]-219),[6]=83};end;else gu[Pv[0X1]]=#gu[Pv[3]];end;else do(gu)[Pv[1]]=j(gu[Pv[3]],gu[Pv[0X02]]);end;end;else if Kv>=0X3A then do if Kv~=0X3B then local ZC,RC,UC=Pv[0x01],Pv[3],Pv[2];if RC==0 then else do Gu=ZC+RC-0X00001;end;end;local GC,cC=nil,(nil);if RC~=1 then GC,cC=EJ(gu[ZC](Z(gu,ZC+1,Gu)));else GC,cC=EJ(gu[ZC]());end;if UC==0X001 then Gu=ZC-1;else if UC==0X00 then do GC=GC+ZC-1;end;do Gu=GC;end;else GC=ZC+UC-0X00002;Gu=GC+1;end;local z0=(0X0);for Io=ZC,GC do z0=z0+0X1;gu[Io]=cC[z0];end;end;else local Mk=Pv[1];local yk=h(function(...)I();for rz in...do I(true,rz);end;end);yk(gu[Mk],gu[Mk+0X1],gu[Mk+2]);Gu=Mk;(gu)[Mk]=yk;do Iu=Pv[3];end;end;end;else local Ow=pI[Pv[3]];local Gw,Fw=Ow[0x7],nil;local qw=(#Gw);if not(qw>0)then else Fw={};for xd=0X0001,qw do local Zd=Gw[xd];if Zd[0X00001]==0x0 then(Fw)[xd-0X1]={gu,Zd[0X2]};else do(Fw)[xd-0X1]=vI[Zd[0x2]];end;end;end;(p)(MI,Fw);end;(gu)[Pv[1]]=uJ(Fw,hu,Ow);end;end;end;end;end;else if not(Kv>=0X4D)then if Kv>=71 then if Kv>=0x4a then if Kv>=75 then if Kv~=0X4C then do Gu=Pv[0x00001];end;(gu)[Gu]=gu[Gu]();else gu[Pv[1]]=z(gu[Pv[3]],gu[Pv[0X2]]);end;else gu[Pv[0X1]]=gu[Pv[0x00003]]<=gu[Pv[0X00002]];end;else if Kv<0X48 then local fm=(Pv[0X3]);local om=(gu[fm]);for T2=fm+0X1,Pv[0X02]do om=om..gu[T2];end;(gu)[Pv[1]]=om;else if Kv~=0x49 then gu[Pv[0X1]]=nil;else gu[Pv[1]]=gu[Pv[3]]>gu[Pv[2]];end;end;end;else if Kv<0x44 then do if Kv==0X43 then local It=Pv[0X001];local Rt,ht,ot=gu[It]();if not(Rt)then else(gu)[It+1]=ht;(gu)[It+2]=ot;Iu=Pv[3];end;else gu[Pv[1]]=gu[Pv[3]]~=Pv[7];end;end;else if not(Kv<0X00045)then if Kv==70 then local nr=(Pv[1]);local Or=(nr+2);local vr=(nr+0x001);gu[nr]=W(G(gu[nr]),'\096f\111r` i\110\105\116\105al\032\118\097\108u\101 \109u\115\116 be\032\097\032\110\117mb\101r');gu[vr]=W(G(gu[vr]),"`fo\114\096 l\105mit \118a\108\117\101 \109\117st\032\098\101\032a \110u\109be\114");(gu)[Or]=W(G(gu[Or]),"`for` step value must be a number");do gu[nr]=gu[nr]-gu[Or];end;Iu=Pv[3];else gu[Pv[0X1]]=Pv[0X00004];end;else Iu=Pv[0X0003];end;end;end;else do if Kv<0X53 then if not(Kv<0x000050)then if not(Kv<81)then do if Kv==0X0052 then gu[Pv[1]]=Pv[0X0004];else local nE,KE=Pv[1],(Pv[0X2]-1)*0X32;local gE=(gu[nE]);for ox=1,Gu-nE do(gE)[KE+ox]=gu[nE+ox];end;end;end;else if gu[Pv[0x3]]==Pv[7]then Iu=Pv[1];end;end;else if not(Kv<0X4e)then do if Kv==79 then if gu[Pv[0x00001]]then do Iu=Pv[3];end;end;else(hu)[Pv[4]]=gu[Pv[1]];end;end;else local Gb=Pv[0X00003];(gu)[Pv[1]]=gu[Gb]..gu[Gb+0X1];end;end;else if Kv<86 then if Kv>=84 then if Kv~=0x055 then gu[Pv[0X1]]=gu[Pv[0X03]]/gu[Pv[0X00002]];else BJ[Pv[3]]=gu[Pv[0X1]];end;else if Pv[2]==0Xd6 then Iu=Iu-0X01;do(dI)[Iu]={[1]=(Pv[0X1]-0X00027),[3]=(Pv[0X03]-0X0027),[6]=72};end;else repeat local k1,Z1=MI,gu;if#k1>0 then local rc={};for dB,UB in r,k1 do do for LU,aU in r,UB do if not(aU[0X1]==Z1 and aU[0x2]>=0)then else local Vn=(aU[2]);do if not(not rc[Vn])then else rc[Vn]={Z1[Vn]};end;end;do aU[1]=rc[Vn];end;(aU)[0X0002]=0X1;end;end;end;end;end;until true;local Fh=(Pv[1]);do return false,Fh,Fh+Pv[3]-2;end;end;end;else if not(Kv>=0X0057)then if not gu[Pv[1]]then Iu=Pv[3];end;else if Kv~=0X0058 then do(gu[Pv[1]])[Pv[4]]=Pv[0X7];end;else local sC=(Pv[0X00001]);do(gu)[sC]=gu[sC](gu[sC+0X0001],gu[sC+0x2]);end;Gu=sC;end;end;end;end;end;end;end;else if not(Kv<0X16)then do if Kv<33 then do if Kv<0X01B then if Kv>=24 then do if not(Kv<0X19)then if Kv==0X01a then if Pv[0X0002]~=0X65 then for DL=Pv[1],Pv[0X0003]do(gu)[DL]=nil;end;else Iu=Iu-1;do(dI)[Iu]={[6]=0x30,[0X3]=(Pv[0X3]-235),[1]=(Pv[0X0001]-235)};end;end;else do Gu=Pv[0X0001];end;(gu[Gu])();Gu=Gu-1;end;else if Pv[0X00002]~=108 then gu[Pv[0X0001]]=-gu[Pv[0X03]];else Iu=Iu-0x0001;dI[Iu]={[6]=0X38,[0X03]=(Pv[0x00003]-151),[1]=(Pv[1]-151)};end;end;end;else if Kv~=0X017 then repeat local f6,m6=MI,gu;if not(#f6>0x0)then else local Z5=({});for cz,hz in r,f6 do for xc,ac in r,hz do if not(ac[1]==m6 and ac[2]>=0)then else local ED=ac[2];if not Z5[ED]then(Z5)[ED]={m6[ED]};end;(ac)[1]=Z5[ED];(ac)[0X2]=1;end;end;end;end;until true;return false,Pv[1],Gu;else gu[Pv[1]]=gu[Pv[3]]+gu[Pv[0X2]];end;end;else if not(Kv<30)then do if not(Kv<0X1f)then if Kv==32 then gu[Pv[0X00001]]={};else if not(not(gu[Pv[0x3]]<=Pv[0X00007]))then else do Iu=Pv[0X001];end;end;end;else gu[Pv[1]][gu[Pv[0X00003]]]=gu[Pv[0X0002]];end;end;else if not(Kv>=0X1c)then do if gu[Pv[3]]~=gu[Pv[0x2]]then do Iu=Pv[1];end;end;end;else if Kv~=29 then(gu)[Pv[1]]=gu[Pv[3]]^gu[Pv[2]];else local os=(Pv[0x1]);local Is,Ms=gu[os]();if not(Is)then else gu[os+1]=Ms;do Iu=Pv[3];end;end;end;end;end;end;end;else if Kv<0x26 then if Kv>=0X23 then if Kv<36 then(gu)[Pv[1]]=K(gu[Pv[3]],gu[Pv[0x2]]);else if Kv==37 then gu[Pv[1]]=gu[Pv[3]][gu[Pv[2]]];else gu[Pv[0x001]]=gu[Pv[3]]>=gu[Pv[2]];end;end;else if Kv~=34 then do(gu)[Pv[1]]=gu[Pv[0x3]]*gu[Pv[0X2]];end;else gu[Pv[0X1]]=gu[Pv[3]]~=gu[Pv[0x2]];end;end;else do if Kv>=41 then if not(Kv<42)then if Kv~=43 then if gu[Pv[0X3]]==gu[Pv[2]]then Iu=Pv[1];end;else gu[Pv[0x1]]=not gu[Pv[3]];end;else local E2=(Pv[0x1]);local w2=h(function(...)(I)();for Zu,pu in...do I(true,Zu,pu);end;end);w2(gu[E2],gu[E2+1],gu[E2+2]);do Gu=E2;end;(gu)[E2]=w2;Iu=Pv[3];end;else if not(Kv<39)then if Kv~=40 then local K0=(Pv[1]);local y0=h(function(...)(I)();for tz,fz,Jz,rz,az,Dz,wz,Tz,bz,Yz in...do I(true,{tz,fz,Jz,rz,az,Dz,wz,Tz,bz,Yz});end;end);(y0)(gu[K0],gu[K0+0X1],gu[K0+2]);Gu=K0;do(gu)[K0]=y0;end;do Iu=Pv[0X3];end;else local Lm=Pv[1];local Tm=gu[Pv[0x0003]];gu[Lm+1]=Tm;gu[Lm]=Tm[Pv[7]];end;else local th=Pv[1];Gu=th+Pv[0X3]-0X00001;(gu[th])(Z(gu,th+0x001,Gu));Gu=th-0X1;end;end;end;end;end;end;else if Kv<0x0000b then if Kv>=5 then if not(Kv>=8)then if Kv<0X6 then gu[Pv[1]]=gu[Pv[3]]==gu[Pv[2]];else if Kv~=0X7 then(gu)[Pv[0X0001]]=gu[Pv[0X03]]-gu[Pv[0X2]];else gu[Pv[0X0001]]=gu[Pv[0x3]]%Pv[0X7];end;end;else if Kv>=0X9 then if Kv==10 then repeat local hL,pL=MI,(gu);if not(#hL>0X0)then else local iH=({});for h1,r1 in r,hL do do for lz,Hz in r,r1 do do if Hz[1]==pL and Hz[2]>=0X00000 then local TP=Hz[2];if not iH[TP]then do iH[TP]={pL[TP]};end;end;Hz[1]=iH[TP];Hz[2]=1;end;end;end;end;end;end;until true;do return true,Pv[0X1],0;end;else gu[Pv[0X1]][Pv[0x4]]=gu[Pv[0X00002]];end;else if not(not(gu[Pv[3]]<gu[Pv[2]]))then else Iu=Pv[0x1];end;end;end;else if not(Kv<2)then if Kv>=0X3 then if Kv==4 then local td=Pv[1];gu[td](gu[td+0X0001]);Gu=td-1;else local g4=Pv[1];local u4=gu[g4+2];local S4=gu[g4]+u4;(gu)[g4]=S4;if u4>0X0 then if S4<=gu[g4+0X001]then Iu=Pv[0X3];(gu)[g4+3]=S4;end;else do if not(S4>=gu[g4+1])then else Iu=Pv[3];do(gu)[g4+0x3]=S4;end;end;end;end;end;else local KY=Pv[0X1];(gu)[KY]=gu[KY](gu[KY+0X1]);Gu=KY;end;else if Kv~=1 then gu[Pv[0X01]]=gu[Pv[3]]<gu[Pv[2]];else do gu[Pv[0x1]]=gu[Pv[3]][Pv[0x7]];end;end;end;end;else do if Kv<0X10 then if not(Kv<0xD)then if Kv>=14 then if Kv~=15 then repeat local D9,e9=MI,(gu);do if not(#D9>0x00000)then else local dq={};for Kk,dk in r,D9 do for TF,qF in r,dk do if qF[1]==e9 and qF[2]>=0 then local hj=(qF[2]);do if not dq[hj]then(dq)[hj]={e9[hj]};end;end;do qF[0x01]=dq[hj];end;do qF[0x2]=0X1;end;end;end;end;end;end;until true;local m1=(Pv[1]);return false,m1,m1;else if Pv[0X0002]==0Xd0 then Iu=Iu-0X01;(dI)[Iu]={[0x6]=0X10,[0X01]=(Pv[1]-0XF7),[3]=(Pv[0X0003]-247)};elseif Pv[0X002]==0x00008D then do Iu=Iu-0X1;end;do(dI)[Iu]={[1]=(Pv[0X00001]-145),[0X3]=(Pv[3]-0X00091),[0X6]=60};end;else local xQ=(Pv[1]);do for yL=xQ,xQ+(Pv[3]-0X001)do(gu)[yL]=Qu[yI+(yL-xQ)+1];end;end;end;end;else local Qr=vI[Pv[3]];(Qr[0x1])[Qr[0X2]]=gu[Pv[0x0001]];end;else if Kv~=12 then local IG,wG=Pv[0x1],Pv[3];Gu=IG+wG-0X1;repeat local XR,KR=MI,(gu);do if not(#XR>0X00)then else local bY=({});for KF,BF in r,XR do for zf,Mf in r,BF do do if Mf[1]==KR and Mf[0x2]>=0X000 then local UQ=(Mf[2]);if not bY[UQ]then do bY[UQ]={KR[UQ]};end;end;do(Mf)[0X1]=bY[UQ];end;(Mf)[2]=1;end;end;end;end;end;end;until true;return true,IG,wG;else local tA=(Pv[0X1]);local aA,iA=gu[tA]();if aA then for UM=0X1,Pv[0X002]do do gu[tA+UM]=iA[UM];end;end;Iu=Pv[3];end;end;end;else if not(Kv>=19)then do if not(Kv>=0X000011)then if Pv[2]~=218 then(gu)[Pv[1]]=gu[Pv[3]];else Iu=Iu-0X1;(dI)[Iu]={[3]=(Pv[3]-36),[6]=22,[1]=(Pv[1]-0X00024)};end;else if Kv==0x12 then local Sn=(Pv[1]);local Bn=(Pv[2]-0X00001)*50;local Nn=gu[Sn];for dT=0X1,Pv[0X03]do do(Nn)[Bn+dT]=gu[Sn+dT];end;end;else if Pv[2]==0xA2 then Iu=Iu-1;dI[Iu]={[0x00001]=(Pv[1]-0Xf2),[3]=(Pv[0X3]-0XF2),[0X006]=60};elseif Pv[2]~=0xCB then gu[Pv[1]]=Qu[yI+0X1];else Iu=Iu-1;(dI)[Iu]={[6]=0x18,[3]=(Pv[3]-0X98),[1]=(Pv[1]-152)};end;end;end;end;else if Kv>=20 then if Kv~=0X15 then local Dw=Pv[1];do Gu=Dw+Pv[3]-1;end;(gu)[Dw]=gu[Dw](Z(gu,Dw+1,Gu));do Gu=Dw;end;else(gu)[Pv[0x1]]=Q(gu[Pv[0X00003]],gu[Pv[2]]);end;else gu[Pv[1]][gu[Pv[3]]]=Pv[7];end;end;end;end;end;end;end;end;end;end);if Vu then if Du then if Tu==1 then return gu[Wu]();else return gu[Wu](Z(gu,Wu+0X1,Gu));end;else if Wu then return Z(gu,Wu,Tu);end;end;else if m(Du)=='\115\116r\105n\103'then if not(g(Du,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if g(Du,"\094.-:\037d+\058 ")then(B)("Lu\114aph\032\083cr\105\112t:"..(zI[Iu-1]or"(internal)")..':\032'..H(Du),0X0);else B(Du,0);end;else B(Du,0);end;end;end;do if c then c(VI,fI);end;end;return VI;end;break;else DJ=4;end;end;else BJ={};DJ=3;end;end;end;until false;end;local function TJ()local CG=(3);local wG,zG,UG,WG,cG,KG=nil,nil,nil,nil,nil,nil;while CG~=8 do if CG<=3 then if CG<=0x001 then if CG~=0 then do WG={};end;CG=0x4;else KG=zG[5];CG=5;end;else if CG==0X02 then UG={};CG=1;else do wG={};end;do CG=7;end;end;end;else if not(CG<=5)then if CG~=6 then do zG={dJ,nil,{},{},{},dJ,nil,dJ,dJ};end;CG=0X2;else cG=q()-75313;do CG=0X0;end;end;else do if CG~=4 then for BB=0x000,cG-1 do(KG)[BB]=TJ();end;do CG=8;end;else do(zG)[QJ]=w();end;CG=6;end;end;end;end;end;do CG=0X00003;end;local tG,VG,GG=nil,nil,(nil);repeat if not(CG<=0x00003)then if not(CG<=5)then if not(CG<=6)then if CG~=7 then do for x9=1,t()do UG[x9]={w(),t()};end;end;CG=0X5;else(zG)[19]=q();CG=0X00000;end;else do(zG)[0X07]=UG;end;CG=8;end;else if CG~=0X4 then VG=1;CG=0X4;else(zG)[6]=t();do CG=7;end;end;end;else if not(CG<=0x1)then if CG~=2 then(zG)[9]=t();do CG=0X001;end;else for UO=1,tG do local tO,hO,zO,KO=0X2,nil,nil,(nil);do while true do if tO<=0X1 then if tO==0X0 then KO=q();do tO=0x0001;end;else for l9=hO,zO do zG[0x4][l9]=KO;end;break;end;else if tO==0X2 then do hO=q();end;do tO=0X003;end;else zO=q();tO=0;end;end;end;end;end;do CG=0X6;end;end;else do if CG~=0X0 then do tG=q();end;CG=2;else GG=q()-90270;CG=9;end;end;end;end;until CG>=0X09;local lG=(zG[3]);for Nh=0X1,GG do(lG)[Nh]={[0X5]=w(),[7]=w(),[3]=L(),[0X6]=t(),[1]=L(),[0X4]=w(),[0x2]=L()};end;local AG=q()-54688;local aG,fG,yG=nil,nil,nil;for Dm=0x0,0x0b do do if not(Dm<=0X5)then if not(Dm<=8)then if Dm<=9 then zG[10]=w();else if Dm==10 then zG[0XA]=q();else return zG;end;end;elseif not(Dm<=6)then do if Dm==0x07 then zG[2]=M(yG,0X2,0x01)~=0X0;else zG[bJ]=q();end;end;else(zG)[0X8]=M(yG,0X01,0x1)~=0X00;end;else do if Dm<=2 then if Dm<=0 then do aG=w();end;else if Dm~=0x00001 then for Ap=1,AG do local Gp,Dp,zp=nil,nil,nil;for Vi=0,4 do if not(Vi<=1)then do if Vi<=0X2 then wG[Ap-0X1]=VG;else if Vi~=0X3 then do zp={Gp,{}};end;else do if Dp==103 then Gp=u(GJ(aG),0x5);elseif Dp==147 then Gp=v()+q();elseif Dp==154 then Gp=A();elseif Dp==0X0049 then Gp=v();else if Dp==181 then do Gp=A();end;elseif Dp==173 then do Gp=false;end;elseif Dp==0X06 then Gp=KJ;else if Dp==0x28 then Gp=v();else if Dp==0X000014 then Gp=u(GJ(aG),q());end;end;end;end;end;end;end;end;else do if Vi~=0x0 then do Dp=w();end;else Gp=dJ;end;end;end;end;local Fp=(1);repeat if Fp==0X0000 then VG=VG+0X0001;Fp=0x02;else do WG[VG]=zp;end;do Fp=0;end;end;until Fp==2;if fG then local gx=0;repeat do if gx==0 then mJ[HJ]=zp;gx=0X00001;else HJ=HJ+0X1;do gx=2;end;end;end;until gx>0X1;end;end;else fG=w()~=0X0;end;end;else if not(Dm<=0X3)then if Dm==4 then for CS=0X1,GG do local eS=(zG[3][CS]);for i3,W3 in zJ(S)do local R3,u3=nil,nil;for xb=0X000,2 do if xb<=0 then do R3=i[W3];end;else if xb~=1 then if u3==11 then local Lp,Xp=nil,(nil);for St=0,2 do if not(St<=0x0)then if St==0x1 then Xp=WG[Lp];else do if Xp then(eS)[R3]=Xp[0X0001];local pQ=(Xp[2]);(pQ)[#pQ+0X00001]={eS,R3};end;end;end;else Lp=wG[eS[W3]];end;end;else if u3==14 then(eS)[W3]=CS+eS[W3]+1;end;end;else u3=eS[R3];end;end;end;end;end;else yG=w();end;else zG[1]=t();end;end;end;end;end;end;end;DJ=0x00002;local eJ=nil;while 0.09240944552329244 do if not(DJ<=0X1)then do if DJ==0X2 then eJ=TJ();do DJ=0X0;end;else mJ=nil;DJ=0X1;end;end;else if DJ==0X000 then do BJ[0x3]=mJ;end;do DJ=3;end;else return uJ(dJ,U,eJ)(...);end;end;end;end)(nil,0X00,ipairs,select,0X003,16,table,'\098\097\110d',0xd,0X0a,9,6,0x0002,string.gsub,0X5,0XF,4,1,7,true,string,coroutine,string.byte,0X8,0XC,string.match,string.rep,0Xe,setfenv,rawget,'bor',bit,tostring,19,type,...);end;